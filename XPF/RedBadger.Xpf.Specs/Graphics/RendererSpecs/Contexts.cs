//-------------------------------------------------------------------------------------------------
// <auto-generated> 
// Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
//-------------------------------------------------------------------------------------------------

#pragma warning disable 169
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMember.Local

namespace RedBadger.Xpf.Specs.Graphics.RendererSpecs
{
    using Machine.Specifications;

    using Moq;

    using RedBadger.Xpf.Adapters.Xna.Graphics;
    using RedBadger.Xpf.Graphics;

    public abstract class a_Renderer
    {
        protected static Renderer Renderer;

        protected static Mock<ISpriteBatch> SpriteBatch;

        private Establish context = () =>
            {
                SpriteBatch = new Mock<ISpriteBatch>();

                var newRect = new Rect();
                SpriteBatch.Setup(batch => batch.TryIntersectViewport(ref newRect)).Returns(true);

                var emptyRect = Rect.Empty;
                SpriteBatch.Setup(batch => batch.TryIntersectViewport(ref emptyRect)).Returns(true);

                Renderer = new Renderer(SpriteBatch.Object, new Mock<IPrimitivesService>().Object);
            };
    }
}