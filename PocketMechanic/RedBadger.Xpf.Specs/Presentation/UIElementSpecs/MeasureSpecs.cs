//-------------------------------------------------------------------------------------------------
// <auto-generated> 
// Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
//-------------------------------------------------------------------------------------------------

#pragma warning disable 169
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMember.Local

namespace RedBadger.Xpf.Specs.Presentation.UIElementSpecs
{
    using Machine.Specifications;

    using Moq;
    using Moq.Protected;

    using RedBadger.Xpf.Presentation;

    using It = Machine.Specifications.It;

    [Subject(typeof(UIElement), "Measure")]
    public class after_measure_is_called : a_UIElement
    {
        private Because of = () => uiElement.Object.Measure(Size.Empty);

        private It should_apply_the_template = () => uiElement.Verify(element => element.OnApplyTemplate(), Times.Once());

        private It should_be_considered_valid = () => uiElement.Object.IsMeasureValid.ShouldBeTrue();
    }

    [Subject(typeof(UIElement), "Measure")]
    public class after_measure_is_called_a_second_time : a_UIElement
    {
        private Establish context = () => uiElement.Object.Measure(Size.Empty);

        private Because of = () => uiElement.Object.Measure(Size.Empty);

        private It should_not_measure_again =
            () => uiElement.Protected().Verify(MeasureOverride, Times.Once(), ItExpr.IsAny<Size>());
    }
}