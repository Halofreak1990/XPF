//-------------------------------------------------------------------------------------------------
// <auto-generated> 
// Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
//-------------------------------------------------------------------------------------------------

#pragma warning disable 169
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMember.Local

namespace RedBadger.Xpf.Specs.Presentation.Media.Imaging
{
    using Machine.Specifications;

    using Microsoft.Xna.Framework.Graphics;

    using RedBadger.Xpf.Presentation.Media.Imaging;
    using RedBadger.Xpf.Specs.Services;

    using StructureMap;

    public class a_context_for_an_xna_image : a_spec_dependent_on_services
    {
        protected static XnaImage Image;

        protected static Texture2D Texture;

        private Establish context = () => { Texture = ObjectFactory.GetInstance<Texture2DService>().Badger; };
    }

    [Subject(typeof(XnaImage))]
    public class when_an_Xna_image_is_instantiated : a_context_for_an_xna_image
    {
        private Because of = () => Image = new XnaImage(Texture);

        private It should_have_a_Height_set = () => Image.Height.ShouldEqual(Texture.Height);

        private It should_have_a_Pixel_Height_set = () => Image.PixelHeight.ShouldEqual(Texture.Height);

        private It should_have_a_Pixel_Width_set = () => Image.PixelWidth.ShouldEqual(Texture.Width);

        private It should_have_a_Width_set = () => Image.Width.ShouldEqual(Texture.Width);
    }
}