//-------------------------------------------------------------------------------------------------
// <auto-generated> 
// Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
//-------------------------------------------------------------------------------------------------
#pragma warning disable 169
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMember.Local

namespace RedBadger.Xpf.Specs.Presentation.SizeSpecs
{
    using RedBadger.Xpf.Presentation;

    using Machine.Specifications;

    [Subject(typeof(Size))]
    public class when_a_size_is_added_to_another_size_using_a_addition_operator
    {
        private static Size size1;

        private static Size size2;

        private static Size resultSize;

        private Establish context = () =>
            {
                size1 = new Size(10, 20);
                size2 = new Size(100, 200);
            };

        private Because of = () => resultSize = size1 + size2;

        private It should_result_in_a_sum_of_the_2_sizes = () => resultSize.ShouldEqual(new Size(110, 220));
    }

    [Subject(typeof(Size))]
    public class requesting_an_empty_size
    {
        private static Size size;

        private Because of = () => size = Size.Empty;

        private It should_return_an_instance_with_zeroed_values = () =>
            {
                size.Width.ShouldEqual(0.0f);
                size.Height.ShouldEqual(0.0f);
            };
    }
}