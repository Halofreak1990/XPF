//-------------------------------------------------------------------------------------------------
// <auto-generated> 
// Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
//-------------------------------------------------------------------------------------------------
#pragma warning disable 169
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMember.Local

namespace RedBadger.Xpf.Specs.Presentation.Controls
{
    using RedBadger.Xpf.Presentation;
    using RedBadger.Xpf.Presentation.Controls;

    using Machine.Specifications;

    using Microsoft.Xna.Framework;

    using Rhino.Mocks;

    public abstract class a_ContentControl
    {
        protected static ContentControl contentControl;

        protected static UIElement childElement;
    }

    [Subject(typeof(ContentControl))]
    public class when_used_as_a_top_level_container
    {
        private static readonly Vector2 expectedDrawPosition = new Vector2(10, 10);

        private static ContentControl contentControl;

        private static IElement childElement;

        Establish context = () =>
            {
                childElement = MockRepository.GenerateMock<IElement>();
            };

        private Because of = () =>
            {
                contentControl = new ContentControl(new Vector2(10, 10))
                    {
                        Content = childElement
                    };
            };

        private It should_allow_an_explicit_draw_position_to_be_specified =
            () => contentControl.DrawPosition.ShouldEqual(expectedDrawPosition);

        [Ignore]
        private It should_cascade_the_Draw_call_down_to_its_child =
            () => childElement.AssertWasCalled(element => element.Draw());
    }
}