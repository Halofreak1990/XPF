//-------------------------------------------------------------------------------------------------
// <auto-generated> 
// Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
//-------------------------------------------------------------------------------------------------

#pragma warning disable 169
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMember.Local

namespace RedBadger.Xpf.Specs.Presentation.Controls
{
    using Moq;

    using Machine.Specifications;

    using RedBadger.Xpf.Presentation;
    using RedBadger.Xpf.Presentation.Controls;

    using It = Machine.Specifications.It;

    public abstract class a_StackPanel
    {
        protected static StackPanel stackPanel;

        private Establish context = () => stackPanel = new StackPanel();
    }

    [Subject(typeof(StackPanel), "Orientation")]
    public class when_the_orientation_is_vertical : a_StackPanel
    {
        private const float ElementHeight = 100f;

        private Because of = () => stackPanel.Orientation = Orientation.Vertical;

/*
        private It should_layout_its_children_vertically = () => stackPanel.ActualHeight.ShouldEqual(ElementHeight * 2);
*/
    }
}