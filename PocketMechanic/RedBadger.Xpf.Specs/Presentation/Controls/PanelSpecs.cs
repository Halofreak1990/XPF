//-------------------------------------------------------------------------------------------------
// <auto-generated> 
// Marked as auto-generated so StyleCop will ignore BDD style tests
// </auto-generated>
//-------------------------------------------------------------------------------------------------

#pragma warning disable 169
// ReSharper disable InconsistentNaming
// ReSharper disable UnusedMember.Global
// ReSharper disable UnusedMember.Local

namespace RedBadger.Xpf.Specs.Presentation.Controls
{
    using Machine.Specifications;

    using Microsoft.Xna.Framework;

    using Moq;

    using RedBadger.Xpf.Graphics;
    using RedBadger.Xpf.Presentation;
    using RedBadger.Xpf.Presentation.Controls;
    using RedBadger.Xpf.Presentation.Media;

    using It = Machine.Specifications.It;

    public abstract class a_Panel
    {
        protected static Panel Panel;

        protected static RootElement RootElement;

        protected static Mock<ISpriteBatch> SpriteBatch;

        private Establish context = () =>
            {
                XpfServiceLocator.RegisterPrimitiveService(new Mock<IPrimitivesService>().Object);

                SpriteBatch = new Mock<ISpriteBatch>();
                RootElement = new RootElement(new Rect(new Size(100, 100)));
                Panel = new Panel();
                RootElement.Content = Panel;
            };

        private Cleanup after = () => XpfServiceLocator.Get<DrawingContext>().Clear();
    }

    [Subject(typeof(Panel), "Background")]
    public class when_panel_background_is_not_specified : a_Panel
    {
        private Because of = () =>
            {
                RootElement.Update();
                RootElement.Draw(SpriteBatch.Object);
            };

        private It should_not_render_a_background =
            () =>
            SpriteBatch.Verify(batch => batch.Draw(Moq.It.IsAny<ITexture2D>(), Moq.It.IsAny<Rect>(), Moq.It.IsAny<Color>()), Times.Never());
    }

    [Subject(typeof(Panel), "Background")]
    public class when_panel_background_is_specified : a_Panel
    {
        private static readonly SolidColorBrush expectedBackground = new SolidColorBrush(Color.Blue);

        private Because of = () =>
            {
                Panel.Background = expectedBackground;
                RootElement.Update();
                RootElement.Draw(SpriteBatch.Object);
            };

        private It should_render_the_background_in_the_right_place = () =>
            {
                var area = new Rect(
                    Panel.VisualOffset.X, 
                    Panel.VisualOffset.Y, 
                    Panel.ActualWidth, 
                    Panel.ActualHeight);

                SpriteBatch.Verify(
                    batch =>
                    batch.Draw(
                        Moq.It.IsAny<ITexture2D>(), 
                        Moq.It.Is<Rect>(rect => rect.Equals(area)), 
                        Moq.It.IsAny<Color>()));
            };

        private It should_render_with_the_specified_background_color =
            () =>
            SpriteBatch.Verify(
                batch => batch.Draw(Moq.It.IsAny<ITexture2D>(), Moq.It.IsAny<Rect>(), expectedBackground.Color));
    }
}